-# = f.input :image
= f.input :mode, collection: Register.modes.map(&:to_sym), include_blank: false, as: :radio_buttons, label: false
= f.input :name
= f.input :forecast_kwh_pa
= f.input :uid

= f.input :observe, wrapper: :vertical_boolean
.js-dependent-fields{data: {checkbox: {id: 'register_observe', value: 'true'}}}
  = f.input :min_watt
  = f.input :max_watt
= f.input :observe_offline, wrapper: :vertical_boolean

= f.association :group, collection: Group.editable_by_user(current_user) if Group.editable_by_user(current_user).any?
= f.input :readable, collection: Register.readables.map(&:to_sym), include_blank: false
- if @register.virtual
  %h5
    %span
      = t('formula')
      %small
        %i.normal-info-circle.fa.fa-info-circle{'data-content' => t('register_formula_info')}
  #formula_parts
    = f.simple_fields_for :formula_parts do |formula_part|
      = render 'formula_part_fields', :f => formula_part, locals: {register: @register}
    .links.mar-btm
      = link_to_add_association t('add_formula_part'), f, :formula_parts, class: "btn btn-xs btn-default btn-rounded btn-labeled fa fa-plus"
