- meta title: @metering_point.long_name



.panel
  .panel-body
    .col-lg-2.col-md-2.col-sm-2.col-xs-3
      / %span.fa-stack.fa-lg.fa-4x
      /   %i.fa.fa-circle.fa-stack-2x
      /   %i.fa.fa-bolt.fa-stack-1x.fa-inverse
      = @metering_point.picture('lg')

    .col-lg-4.col-md-4.col-sm-4.col-xs-5
      .media-body.pad-lft
        - if @metering_point.virtual
          %p.text-3x.mar-no= @metering_point.name + " (" + t('virtual') + ")"
        - else
          %p.text-3x.mar-no= @metering_point.name
        %p.text-2x.mar-no.text-thin= @metering_point.address ? @metering_point.address.short_name : t('no_address')

    / - if @metering_point.input?
    /   .metering_point_scores{'data-content' => @metering_point.id}

    /     %table
    /       %tbody
    /         %tr
    /           %td.text-1x.mar-no.float-left= t('sufficiency')
    /           %td.score_sufficiency
    /         - if @group
    /           %tr
    /             %td.text-1x.mar-no.float-left= t('fitting')
    /             %td.score_fitting


    .panel-control

      / - if @metering_point.smart?
      /   .add-to-dashboard
      /     - if user_signed_in? && (current_user.dashboard.nil? || !current_user.dashboard.metering_points.include?(@metering_point))
      /       = @metering_point.add_to_dashboard

      - if user_signed_in?
        - if @requests.any? && @requests.collect(&:user).include?(current_user)
          %button.btn.btn-success.btn-labeled.fa.fa-spinner{:disabled => "disabled"}= t'waiting_for_accepting'
        - else
          - if !@profiles.include?(current_user.profile)
            - if current_user.friend?(@metering_point.managers.first) || current_user.can_update?(@metering_point)
              .btn.btn
              = link_to(t('join_this_metering_point'), metering_point_user_requests_path(user_id: current_user.id, metering_point_id: @metering_point.id, mode: 'request'), method: :post, class: 'btn btn-success btn-labeled fa fa-plus')
          - else
            = link_to(t('leave_this_metering_point'), cancel_membership_metering_point_path(user_id: current_user.id), :data => {:confirm => t('are_you_sure')}, class: 'btn btn-warning btn-labeled fa fa-minus')
      - if user_signed_in? && current_user.can_update?(@metering_point)
        .btn-group
          %button.btn.btn-block.btn-success.btn-labeled.fa.fa-user-times.dropdown-toggle{"data-toggle" => "dropdown", type: "button"}
            =t('remove_members')
          %ul.dropdown-menu{role: "menu"}
            - @profiles.each do |profile|
              %li= link_to(profile.name, cancel_membership_metering_point_path(user_id: profile.user.id), :data => {:confirm => t('are_you_sure')})
        = @metering_point.new_invitations
        = @metering_point.link_to_edit



- if user_signed_in? && current_user.can_update?(@metering_point)
  - if @requests.any?
    .friendship_requests
      = render @requests




#page-content
  .row
    .col-sm-6.col-md-3.col-lg-3
      .panel.media.pad-all
        .media-left
          %span.icon-wrap.icon-wrap-sm.icon-circle.panel-colorful{class: "panel-#{@metering_point.mode_class}"}
            %i.fa.fa-arrow-circle-o-right.fa-2x
        .media-body.metering_point{ id: "metering_point_#{@metering_point.id}"}
          = content_tag :div, id: "metering_point-ticker-#{@metering_point.id}", class: "metering_point-ticker", data: { fake: !@metering_point.smart? && !@metering_point.virtual, source: @metering_point.data_source } do
            %span.text-2x.text-thin
              .power-ticker
                = t('loading') + '...'
          %p= t('current_power_in_watts')


  .row
    .metering_point_detail{id: "metering_point_#{@metering_point.id}"}
      - if !@metering_point.smart?
        .ribbon-wrapper-green{"data-toggle" => "popover", "data-placement" => "left", "title" => t("dummy"), "data-content" => t("you_dont_have_a_smart_meter_so_your_energy_data_is_estimated_as_shown")}
          .ribbon-green= t('dummy')
      .panel
        .panel-body.panel-colorful{class: "panel-#{@metering_point.mode_class}"}
          .text-center
            /.btn.btn-default.btn-icon.btn-circle.icon-lg.btn-chart-zoomout.fa.fa-search-minus.fa-2x{disabled: "disabled"}
            .btn.btn-default.btn-chart-zoom-month{disabled: "disabled"}
              = t('month')
            .btn.btn-default.btn-chart-zoom-day{disabled: "disabled"}
              = t('day')
            .btn.btn-default.btn-chart-zoom-hour{disabled: "disabled"}
              = t('hour')
            .btn.btn-default.btn-chart-zoom-live{disabled: "disabled"}
              = t('live')
          .btn.btn-default.btn-icon.btn-circle.icon-lg.btn-chart-prev.fa.fa-chevron-left.fa-2x{disabled: "disabled"}
          .btn.btn-default.btn-icon.btn-circle.icon-lg.btn-chart-next.pull-right.fa.fa-chevron-right.fa-2x{disabled: "disabled"}

          .chart{id: "chart-container-#{@metering_point.id}", style: "width: 94%; height: 300px; margin-left: 3%;"}
            .waiting-spinner.fa.fa-spinner.fa-2x.fa-spin
          %ul.chart-context-menu
            %li{"data-action" => "comment"}= t('create_new_comment_here')
            /%li{"data-action" => "zoom_in"}= t('zoom_in_here_if_possible')
          .chart-comment-form
            .comments-panel{data: {commentable_type: 'MeteringPoint', commentable_id: @metering_point.id} }
              .comment-form-container
                = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(@metering_point, current_user.id, "", nil) }



          / .text-center
          /   - if !@metering_point.smart?
          /     .new-reading
          /       = @metering_point.submit_reading
          /       = @metering_point.edit_readings


  .row
    .col-md-6.col-lg-6
      / - if user_signed_in? && current_user.can_update?(@metering_point) || @devices.size != 0
      /   %h1.page-header.text-overflow
      /     %span
      /       = t('devices')
      /       %small
      /         %i.small-info-circle.fa.fa-info-circle{'data-content' => t('devices_info_metering_point')}
      /   .row
      /     .devices
      /       = render @devices
      /   .row
      /     - if user_signed_in? && current_user.can_update?(@metering_point)
      /       .row
      /         .col-lg-12.text-center
      /           = @metering_point.edit_devices


      - if user_signed_in? && current_user.can_read?(@metering_point)
        /%hr
        %h1.page-header.text-overflow
          %span
            = t('members')
            %small
              %i.small-info-circle.fa.fa-info-circle{'data-content' => t('members_info_metering_point')}
        .row
          - @profiles.each do |profile|
            = render profile


      - if user_signed_in? && @metering_point.address && current_user.can_read?(@metering_point.address)
        %hr
        %h1.page-header.text-overflow
          %span
            = t('address')
            %small
              %i.small-info-circle.fa.fa-info-circle{'data-content' => t('address_info')}
        .row
          .addresses
            = render @metering_point.address if @metering_point.address
        .row
          - if @metering_point.address.nil?
            .row
              .col-lg-12.text-center
                = @metering_point.new_address

      - if user_signed_in? && current_user.can_update?(@metering_point)
        %hr
        - if !@metering_point.virtual
          %h1.page-header.text-overflow
            %span
              = t('meters')
              %small
                %i.small-info-circle.fa.fa-info-circle{'data-content' => t('meters_info')}
          .row
            .meters
              - if @metering_point.meter
                = render @metering_point.meter
              - else
                .new_meter.show_meter_tour
                  .row
                    .col-lg-12.text-center
                      = @metering_point.new_meter
        - else
          %h1.page-header.text-overflow
            %span
              = t('formula_parts')
              %small
                %i.small-info-circle.fa.fa-info-circle{'data-content' => t('formula_parts_info')}
          .row
            .formula_parts.metering_points
              = render @metering_point.formula_parts if @metering_point.formula_parts.any?



    .col-md-6.col-lg-6

      - if user_signed_in?
        /.col-sm-6.col-md-6.col-lg-6
        %h1.page-header.text-overflow
          %span
            = t('comments')
        .panel.comments-panel{data: {commentable_type: 'MeteringPoint', commentable_id: @metering_point.id} }
          #demo-chat-body.collapse.in
            .nano{:style => "height:610px"}
              .comment-form-container
                = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(@metering_point, current_user.id, "", nil) }
              .nano-content.pad-all.comments-content
                %ul.list-unstyled.media-block.comments-all
                  - @activities_and_comments.each do |object|
                    - if object.class.name == 'Comment'
                      = render :partial => 'comments/comment', :collection => [object], :as => :comment
                    -elsif object.class.name == 'PublicActivity::Activity'
                      = render_activity object, locals: {decorator: object.decorate} , layout: "layouts/activity_wrapper"





      / - if user_signed_in? && current_user.can_update?(@metering_point)

      /   %h1.page-header.text-overflow
      /     %span
      /       = t('data_connection')
      /       %small
      /         %i.small-info-circle.fa.fa-info-circle{'data-content' => t('data_connection_info')}
      /   .row
      /     .contracts
      /       = render @metering_point.contracts

      /     .row
      /       .col-lg-12.text-center
      /         = @metering_point.new_contract


