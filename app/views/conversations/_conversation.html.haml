
.panel{id: "conversation_#{conversation.id}"}
  .panel-heading
    .panel-control
      .btn-group
        = link_to(content_tag(:button, nil, class: 'btn btn-default fa fa-cog'), edit_conversation_path(conversation),{:remote => true, :class => 'start-modal', 'data-toggle' => "modal", 'data-target' => '#myModal'})
        = link_to(content_tag(:button, nil, class: 'btn btn-default fa fa-times'), unsubscribe_conversation_path(conversation), {remote: true, method: 'put'})
    %h4.panel-title
      %a{'data-parent' => "#accordion", 'data-toggle' => 'collapse', href: "#collapse_#{conversation.id}"}= conversation.users.exclude_user(current_user).any? ? conversation.users.exclude_user(current_user).collect(&:name).join(', ') : t("no_participating_users")
  .panel-collapse.collapse.comments-panel{id: "collapse_#{conversation.id}", data: {commentable_type: 'Conversation', commentable_id: conversation.id} }
    .chat-body
      .nano{:style => "height:610px"}
        .comment-form-container
          = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(conversation, current_user.id, "", nil) }
        .nano-content.pad-all.comments-content
          %ul.list-unstyled.media-block.comments-all{id: "conversation_#{conversation.id}_comments-all"}
            - activities = conversation.activities
            - activities_and_comments = (conversation.root_comments + activities).sort_by!(&:created_at).reverse!
            - activities_and_comments.each do |object|
              - if object.class.name == 'Comment'
                = render :partial => 'comments/comment', :collection => [object], :as => :comment
              - elsif object.class.name == 'PublicActivity::Activity'
                = render_activity object, locals: {decorator: object.decorate} , layout: "layouts/activity_wrapper"
