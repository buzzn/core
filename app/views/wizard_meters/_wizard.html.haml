.modal-content
  .modal-header
    %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", type: "button"} Ã—
    %h4.modal-title= t'new_meter'
  .modal-body
    = simple_form_for @meter, remote: true, url: wizard_update_wizard_meters_path(register_id: @register.id), method: 'put'   do |f|
      %h3=t('create_meter')
      %fieldset
        - if current_user.editable_registers.collect(&:meter).uniq.compact.any?
          = f.input :existing_meter, as: :radio_buttons, collection: [t("create_new_meter"), t("add_existing_meter")], checked: t("create_new_meter"), label: false
          .js-dependent-fields{data: {radio: {name: 'meter[existing_meter]', value: t("add_existing_meter")}}}
            = f.input :meter_id, collection: current_user.editable_registers.collect(&:meter).uniq.compact, :label_method => lambda { |m| m.name }, include_blank: false, input_html: { class: 'select2'}, label: false, selected: current_user.editable_registers.collect(&:meter).uniq.compact.first
          .js-dependent-fields{data: {radio: {name: 'meter[existing_meter]', value: t("create_new_meter")}}}
            = f.input :manufacturer_product_serialnumber
            = f.input :smartmeter, as: :boolean, wrapper: :vertical_boolean, input_html: { checked: 'false' }
        - else
          = f.input :manufacturer_product_serialnumber
          = f.input :smartmeter, as: :boolean, wrapper: :vertical_boolean, input_html: { checked: 'false' }
      %h3=t('establish_data_connection')
      %fieldset
        = f.simple_fields_for @discovergy_broker do |ff|
          .js-dependent-fields{data: {checkbox: {id: 'meter_smartmeter', value: 'true'}}}
            = ff.input :organization, collection: Organization.metering_point_operators, input_html: { class: 'select2', 'data-placeholder': t('select_smart_metering_provider')}, label: t('smart_metering_provider')
            .js-dependent-fields{'data-select-id' => 'meter_discovergy_broker_organization', 'data-option-value' => Organization.where(slug: 'discovergy').first.id}
              = ff.input :provider_login
              = ff.input :provider_password
            .js-dependent-fields{'data-select-id' => 'meter_discovergy_broker_organization', 'data-option-value' => Organization.where(slug: 'mysmartgrid').first.id}
              = ff.input :sensor_id, as: :text, :input_html => {value: ''}, label_method: :sensor_id
              = ff.input :x_token, as: :text, :input_html => {value: ''}, label_method: :x_token
          .js-dependent-fields{data: {radio: {name: 'meter[existing_meter]', value: t("add_existing_meter")}}}
            = t('the_register_will_get_its_data_via_the_connection_established_by_the_selected_meter')
          .js-dependent-fields{data: {radio: {name: 'meter[existing_meter]', value: t("create_new_meter")}}}
            .js-dependent-fields{data: {checkbox: {id: 'meter_smartmeter', value: 'false'}}}
              = t('no_smartmeter_means_you_get_dummy_data')