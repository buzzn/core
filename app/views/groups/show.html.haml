- meta title: @group.name
- meta description: @group.description
- meta keywords: @group.keywords
- rel "apple-touch-icon" => @group.logo.url if @group.logo




.panel
  .panel-body
    .col-lg-1.col-md-2.col-sm-2.col-xs-3
      = @group.picture('lg')


    .col-lg-6.col-md-6.col-sm-6.col-xs-5
      .media-body.pad-lft
        %p.text-3x.mar-no= @group.name





      %ul.list-group.bg-trans

        - if @group.website
          %li.list-group-item.list-item-sm.text-primary.text-semibold
            %a.btn-link{:href => "#"}
              %i.fa.fa-globe.fa-fw
              = link_to_external @group.website
        %li.list-group-item.list-item-sm.text-primary.readability{class: "fa fa-#{@group.readable_icon}", 'data-title' => t('readable_by') + ': ' + t("#{@group.readable}")}

    / .group_scores{'data-content' => @group.id}

    /   %table
    /     %tbody
    /       %tr
    /         %td.text-1x.mar-no.float-left= t('sufficiency')
    /         %td.score_sufficiency
    /       %tr
    /         %td.text-1x.mar-no.float-left= t('closeness')
    /         %td.score_closeness
    /       %tr
    /         %td.text-1x.mar-no.float-left= t('autarchy')
    /         %td.score_autarchy
    /       %tr
    /         %td.text-1x.mar-no.float-left= t('fitting')
    /         %td.score_fitting



    .panel-control

      .btn-group
        %button.btn.btn-block.btn-success.btn-labeled.fa.fa-bars.dropdown-toggle{"data-toggle" => "dropdown", type: "button"}
          =t('actions')
        %ul.dropdown-menu.dropdown-menu-right{role: "menu"}
          - if user_signed_in? && current_user.can_update?(@group)
            %li= link_to(t('edit_group'), edit_group_path(@group), {:remote => true, 'data-toggle' => "modal", 'data-target' => '#myModal'})
            %li= link_to(t('remove_metering_points'), remove_members_group_path(@group),{:remote => true,'data-toggle' => "modal", 'data-target' => '#myModal'})
            %li= link_to(t('add_group_manager'), add_manager_group_path(@group),{:remote => true,'data-toggle' => "modal", 'data-target' => '#myModal'})
          - if user_signed_in?
            - if @group.mode == 'localpool'
              -if current_user.can_update?(@group)
                %li= link_to(t("add_metering_points"), send_invitations_group_path, {:remote => true, 'data-toggle' => 'modal', 'data-target' => '#myModal'})
            - else
              %li.dropdown-header= t('membership')
              - if current_user.editable_metering_points.flatten.count != 0
                - if current_user.editable_metering_points.flatten.count == 1
                  - if current_user.editable_metering_points.flatten.first.mode == "in"
                    - if @group.received_group_metering_point_requests.any? && @group.received_group_metering_point_requests.collect(&:metering_point).include?(current_user.editable_metering_points.flatten.first)
                      %li= t('sent_request_with_metering_point', metering_point_name: current_user.editable_metering_points.flatten.first.decorate.name)
                    - elsif current_user.editable_metering_points.flatten.first.group == nil
                      %li= link_to t('join_this_group'), group_metering_point_requests_path( group_id: @group, metering_point_id: current_user.editable_metering_points.flatten.first.id, mode: 'request'), method: :post
                    - elsif current_user.editable_metering_points.flatten.first.group == @group
                      %li= link_to(t('leave_this_group'), remove_members_update_group_path(metering_point_id: current_user.editable_metering_points.flatten.first.id), :data => {:confirm => t('are_you_sure')}, :method => :put)
                    - else
                      %li= link_to(t('join_this_group_and_leave_group', group_name: current_user.editable_metering_points.flatten.first.group.name), group_metering_point_requests_path( group_id: @group, metering_point_id: current_user.editable_metering_points.flatten.first.id, mode: 'request'), method: :post)
                - else
                  - current_user.editable_metering_points.flatten.each do |metering_point|
                    - if metering_point.mode == "in"
                      - if @group.received_group_metering_point_requests.any? && @group.received_group_metering_point_requests.collect(&:metering_point).include?(metering_point)
                        %li= t('sent_request_with_metering_point', metering_point_name: metering_point.decorate.name)
                        - next
                      - if metering_point.group == @group
                        %li= link_to(t('leave_this_group_with_metering_point', metering_point_name: metering_point.decorate.name), remove_members_update_group_path(metering_point_id: metering_point.id), :data => {:confirm => t('are_you_sure')}, :method => :put)
                      - elsif metering_point.group
                        %li= link_to(t('join_this_group_with_metering_point_and_leave_group', metering_point_name: metering_point.decorate.name, group_name: metering_point.group.name), group_metering_point_requests_path( group_id: @group, metering_point_id: metering_point.id, mode: 'request'), method: :post)
                      - else
                        %li= link_to t('join_this_group_with_metering_point', metering_point_name: metering_point.decorate.name), group_metering_point_requests_path( group_id: @group, metering_point_id: metering_point.id, mode: 'request'), method: :post




- if user_signed_in? && current_user.can_update?(@group)
  - if @group_metering_point_requests.any?
    .friendship_requests
      = render @group_metering_point_requests








#page-content

  .row
    .col-sm-6.col-md-6.col-lg-6
      - if @group.description
        %h1.page-header.text-overflow
          %span
            = t('description')
        .panel
          .panel-body= @group.description

      /.col-sm-6.col-md-6.col-lg-6
      %h1.page-header.text-overflow
        %span
          = t('bubbles')
          %small
            %i.small-info-circle.fa.fa-info-circle{'data-content' => t('live_chart_info')}
      .panel
        .change-order
          .fa.fa-retweet{'data-content' => t('click_to_change_order_of_all_red_and_blue_bubbles')}
        .bubbles_container{'data-content' => @group.id, id: "bubbles_container_" + @group.id.to_s}
          .waiting-spinner.fa.fa-spinner.fa-2x.fa-spin
          #dummy



    - if user_signed_in?
      .col-sm-6.col-md-6.col-lg-6
        %h1.page-header.text-overflow
          %span
            = t('comments')
        .panel.comments-panel{data: {commentable_type: 'Group', commentable_id: @group.id} }
          #demo-chat-body.collapse.in
            .nano{:style => "height:610px"}
              .comment-form-container
                = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(@group, current_user.id, "", nil) }
              .nano-content.pad-all.comments-content
                %ul.list-unstyled.media-block.comments-all
                  - @activities_and_comments.each do |object|
                    - if object.class.name == 'Comment'
                      = render :partial => 'comments/comment', :collection => [object], :as => :comment
                    -elsif object.class.name == 'PublicActivity::Activity'
                      = render_activity object, locals: {decorator: object.decorate} , layout: "layouts/activity_wrapper"




  .row
    .col-sm-12.col-md-12.col-lg-12.group-chart{id: @group.id}
      %h1.page-header.text-overflow
        %span
          = t('lines')
          %small
            %i.small-info-circle.fa.fa-info-circle{'data-content' => t('trend_chart_info')}
      .panel
        .panel-body.panel-colorful

          .text-center
            /.btn.btn-default.btn-icon.btn-circle.icon-lg.btn-chart-zoomout.btn.fa.fa-search-minus.fa-2x{disabled: "disabled"}
            .btn.btn-default.btn-chart-zoom-year{disabled: "disabled"}
              = t('year')
            .btn.btn-default.btn-chart-zoom-month{disabled: "disabled"}
              = t('month')
            .btn.btn-default.btn-chart-zoom-day{disabled: "disabled"}
              = t('day')
            .btn.btn-default.btn-chart-zoom-hour{disabled: "disabled"}
              = t('hour')
            .btn.btn-default.btn-chart-zoom-live{disabled: "disabled"}
              = t('live')
          .btn.btn-default.btn-icon.btn-circle.icon-lg.btn-chart-prev.fa.fa-chevron-left.fa-2x{disabled: "disabled"}
          .btn.btn-default.btn-icon.btn-circle.icon-lg.btn-chart-next.pull-right.fa.fa-chevron-right.fa-2x{disabled: "disabled"}
          .chart{id: "chart-container-#{@group.id}", style: "width: 94%; height: 300px; margin-left: 3%;"}
            .waiting-spinner.fa.fa-spinner.fa-2x.fa-spin
          - if user_signed_in?
            %ul.chart-context-menu
              %li{"data-action" => "comment"}= t('create_new_comment_here')
              /%li{"data-action" => "zoom_in"}= t('zoom_in_here_if_possible')
            .chart-comments
            .chart-comment-form
              .comments-panel{data: {commentable_type: 'Group', commentable_id: @group.id} }
                .comment-form-container
                  = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(@group, current_user.id, "", nil) }






      / - if @out_devices.flatten.any?
      /   %h1.page-header.text-overflow
      /     %span
      /       = t('out_devices')
      /       %small
      /         %i.small-info-circle.fa.fa-info-circle{'data-content' => t('out_devices_info_group')}
      /   .row
      /     .out-devices
      /       - @out_devices.each do |device|
      /         = render device

      / - if @out_metering_points.any?
      /   %h1.page-header.text-overflow
      /     %span
      /       = t('out_metering_points')
      /       %small
      /         %i.small-info-circle.fa.fa-info-circle{'data-content' => t('out_metering_points_info_group')}
      /   .row
      /     .metering_points
      /       - @out_metering_points.each do |metering_point|
      /         = render metering_point











  - if user_signed_in?
    .row
      .col-sm-6.col-md-6.col-lg-6
        - if @energy_consumers.any?
          %h1.page-header.text-overflow
            %span
              = t('energy_consumers')
              %small
                %i.small-info-circle.fa.fa-info-circle{'data-content' => t('energy_consumers_info')}
          .row
            - @energy_consumers.each do |user|
              = render user.profile if user.profile
          %hr


      .col-sm-6.col-md-6.col-lg-6
        - if @energy_producers.any?
          %h1.page-header.text-overflow
            %span
              = t('energy_producers')
              %small
                %i.small-info-circle.fa.fa-info-circle{'data-content' => t('energy_producers_info')}
          .row
            - @energy_producers.each do |user|
              = render user.profile if user.profile
          %hr

        - if @managers.any?
          %h1.page-header.text-overflow
            %span
              = t('group_managers')
              %small
                %i.small-info-circle.fa.fa-info-circle{'data-content' => t('group_manager_info')}
          .row
            - @managers.each do |user|
              = render user.profile if user.profile
          %hr

      - if @interested_members.any?
        %h1.page-header.text-overflow
          %span
            = t('interested_members')
            %small
              %i.small-info-circle.fa.fa-info-circle{'data-content' => t('interested_members_info')}
        .row
          - @interested_members.each do |user|
            = render user.profile if user.profile
        %hr




  - if user_signed_in? && current_user.can_update?(@group)
    %h1.page-header.text-overflow
      %span
        = t('metering_points')
        %small
          %i.small-info-circle.fa.fa-info-circle{'data-content' => t('group_metering_points_info')}
    .row
      .col-sm-12.col-md-12.col-lg-12
        .metering_points
          = render partial: "metering_points/metering_point_small", collection: @out_metering_points + @in_metering_points, as: :metering_point




      / - if user_signed_in? && current_user.can_update?(@group)
      /   %h1.page-header.text-overflow
      /     %span
      /       = t('contracts')
      /       %small
      /         %i.small-info-circle.fa.fa-info-circle{'data-content' => t('contracts_info_group')}
      /   .row
      /     .contracts
      /       = render @group.contracts
      /     .row
      /       .col-lg-12.text-center
      /         = @group.new_contract





