- meta title: @group.name
- meta description: @group.description
- meta keywords: @group.keywords
- rel "apple-touch-icon" => @group.logo.url if @group.logo

= content_for :aside do
  %aside#aside-container

    #aside
      .nano
        .nano-content{:tabindex => "0"}
          .text-center.pad-all
            .pad-ver
              - if @group.logo?
                = image_tag @group.logo.lg, class: 'img-circle img-lg img-border'
              - else
                %span.fa-stack.fa-lg.fa-5x
                  %i.fa.fa-circle.fa-stack-2x
                  %i.fa.fa-users.fa-stack-1x.fa-inverse

            %h4.text-lg.text-overflow.mar-no= @group.name

            %p.text-sm
            .btn-group
              %button.btn.btn-block.btn-success.dropdown-toggle{"data-toggle" => "dropdown", type: "button"}
                =t('membership')
              %ul.dropdown-menu{role: "menu"}
                - if user_signed_in?
                  - if current_user.editable_metering_points.flatten.count == 1
                    - if current_user.editable_metering_points.flatten.first.mode == "in"
                      - if current_user.editable_metering_points.flatten.first.group == nil
                        %li= link_to t('join_this_group'), group_metering_point_requests_path( group_id: @group, metering_point_id: current_user.editable_metering_points.flatten.first.id), method: :post
                      - elsif current_user.editable_metering_points.flatten.first.group == @group
                        %li= link_to(t('leave_this_group'), cancel_membership_group_path(metering_point_id: current_user.editable_metering_points.flatten.first.id), :data => {:confirm => t('are_you_sure')})
                      - else
                        %li= link_to(t('join_this_group_and_leave_group', group_name: current_user.editable_metering_points.flatten.first.group.name), group_metering_point_requests_path( group_id: @group, metering_point_id: current_user.editable_metering_points.flatten.first.id), method: :post)
                  - else
                    - current_user.editable_metering_points.flatten.each do |metering_point|
                      - if metering_point.mode == "in"
                        - if @group.received_group_metering_point_requests.any? && @group.received_group_metering_point_requests.collect(&:metering_point).include?(metering_point)
                          %li= t('sent_request_with_metering_point', metering_point_name: metering_point.decorate.name)
                          - next
                        - if metering_point.group == @group
                          %li= link_to(t('leave_this_group_with_metering_point', metering_point_name: metering_point.decorate.name), cancel_membership_group_path(metering_point_id: metering_point.id), :data => {:confirm => t('are_you_sure')})
                        - elsif metering_point.group
                          %li= link_to(t('join_this_group_with_metering_point_and_leave_group', metering_point_name: metering_point.decorate.name, group_name: metering_point.group.name), group_metering_point_requests_path( group_id: @group, metering_point_id: metering_point.id), method: :post)
                        - else
                          %li= link_to t('join_this_group_with_metering_point', metering_point_name: metering_point.decorate.name), group_metering_point_requests_path( group_id: @group, metering_point_id: metering_point.id), method: :post

          %hr
            .pad-hor
              %h5=t'group_admin'

            %ul.list-group.bg-trans
              - @group.managers.each do |user|
                %li.list-group-item.list-item-sm
                  %i.fa.fa-user.fa-fw
                  = link_to user.name, user.profile

          %hr
            %ul.list-group.bg-trans

              %li.list-group-item.list-item-sm
                %i.fa.fa-clock-o.fa-fw
                = t'created'
                = timeago_tag @group.created_at, :nojs => true, :lang => locale, :limit => 10.days.ago

              - if @group.website
                %li.list-group-item.list-item-sm.text-primary.text-semibold
                  %a.btn-link{:href => "#"}
                    %i.fa.fa-globe.fa-fw
                    = link_to_external @group.website





          - if @group.description
            %hr
              .pad-hor
                %h5=t('description')
                %small.text-thin= @group.description

          %hr
            .text-center.clearfix
              .col-xs-6
                %p.h3= @energy_producers.count
                %small.text-muted= t'energy_producers'
              .col-xs-6
                %p.h3= @energy_consumers.count
                %small.text-muted= t'energy_consumers'


          %hr
            .text-center.clearfix
              - if user_signed_in?
                - if current_user.can_update?(@group)
                  = @group.link_to_edit

        .nano-pane{:style => "display: none;"}
          .nano-slider{:style => "height: 20px; transform: translate(0px, 0px);"}

- if user_signed_in? && current_user.can_update?(@group)
  - if @group_metering_point_requests.any?
    .row
      .col-lg-12
        .panel.panel-colorful.panel-warning
          .panel-body
            .friendship_requests
              = render @group_metering_point_requests


#page-content

  .row
    .col-sm-6.col-md-6.col-lg-6
      %h1.page-header.text-overflow
        %span
          = t('live_chart')
          %small
            %i.small-info-circle.fa.fa-info-circle{'data-content' => t('live_chart_info')}
      .panel
        .bubbles_container{'data-content' => @group.id, id: "bubbles_container_" + @group.id.to_s}
          #dummy

    .col-sm-6.col-md-6.col-lg-6
      %h1.page-header.text-overflow
        %span
          = t('comments')
      .panel.comment-form
        #demo-chat-body.collapse.in
          .nano{:style => "height:410px"}
            .nano-content.pad-all
              %ul.list-unstyled.media-block.comments-all
                = render :partial => 'comments/comment', :collection => @all_comments, :as => :comment
          .panel-footer
            = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(@group, current_user.id, "") } if user_signed_in?
  %hr



  %h1.page-header.text-overflow
    %span
      = t('out_metering_points')
  .row
    .metering_points
      = render @out_metering_points
  %hr



  / - if user_signed_in? && current_user.can_update?(@group)
  /   %h1.page-header.text-overflow
  /     %span
  /       = t('metering_points')
  /       %small
  /         %i.fa.fa-info-circle{'data-content' => "Ein Zählpunkt ist die Bezeichnung für die Messstelle, für die der Strom gemessen wird, z.B. „Keller“ oder „Dachboden“. In den meisten Fällen ist der Zählpunkt gleichbedeutend mit dem Haus oder der Wohnung, in der er sich befindet.", 'data-title' => "Was ist ein Zählpunkt?"}
  /   .row
  /     .metering_points
  /       = render @in_metering_points
  /   %hr




  - if @energy_producers.any?
    %h1.page-header.text-overflow
      %span
        = t('energy_producers')
        %small
          %i.small-info-circle.fa.fa-info-circle{'data-content' => t('energy_producers_info')}
    .row
      - @energy_producers.each do |user|
        = render user.profile
    %hr





  / - if @energy_consumers.any?
  /   %h1.page-header.text-overflow
  /     %span
  /       = t('energy_consumers')
  /       %small
  /         %i.small-info-circle.fa.fa-info-circle{'data-content' => t('energy_consumers_info')}
  /   .row
  /     - @energy_consumers.each do |user|
  /       = render user.profile
  /   %hr





  - if @interested_members.any?
    %h1.page-header.text-overflow
      %span
        = t('interested_members')
        %small
          %i.small-info-circle.fa.fa-info-circle{'data-content' => t('interested_members_info')}
    .row
      - @interested_members.each do |user|
        = render user.profile
    %hr




  - if user_signed_in? && current_user.can_update?(@group)
    %h1.page-header.text-overflow
      %span
        = t('contracts')
        %small
          %i.small-info-circle.fa.fa-info-circle{'data-content' => t('contracts_info_group')}
    .row
      = render @group.contracts




