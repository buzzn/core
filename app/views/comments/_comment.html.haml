%li.mar-btm.comment{ :id => "comment_#{comment.id}" }
  .media-left
    = link_to(comment.user.profile.decorate.picture('sm'), profile_path(comment.user.profile))
  .media-body.pad-hor
    .speech
      - if user_signed_in? && comment.deletable_by?(current_user) && !comment.has_children?
        .remove_comment.pull-right
          = link_to "×", comment_path(comment), :method => :delete, :remote => true, :data => { :confirm => t("are_you_sure_you_want_to_remove_this_comment") }, :disable_with => "×", :class => 'close'
      %h5= link_to(comment.user.name, profile_path(comment.user.profile))

      %p= link_to(image_tag(comment.image.lg), image_path(comment.image)) if comment.image.present?
      - if comment.chart_timestamp
        %span.pull-left.set-chart-view{data: {'commentable_type' => comment.commentable_type, 'commentable_id' => comment.commentable_id, 'resolution' => comment.chart_resolution, 'timestamp' => comment.chart_timestamp.to_i*1000}}
          .fa.fa-bar-chart

      %p= auto_link(comment.body, :html => { :target => '_blank' })


      %p.speech-time.time
        %i.fa.fa-clock-o.fa-fw
        = timeago_tag comment.updated_at, :nojs => true, :lang => locale, :limit => 10.days.ago
      .likes{'data-toggle' => 'tooltip', 'title' => comment.get_likes.size > 0 ? (comment.get_likes.voters.collect(&:name).join(", ") + ' ' + "<span><div class='fa fa-heart'></div></span>" + ' ' + t('this_comment')) : '' }
        .speech-time

          - if user_signed_in?
            - if current_user.liked?(comment)
              %i.vote-for.vote-icon.fa.fa-heart
            -else
              %i.vote-for.vote-icon.fa.fa-heart-o
          - else
            %i.vote-icon.fa.fa-heart-o

          .likes-count= comment.get_likes.size

      - if comment.parent.nil? && comment.commentable_type != 'PublicActivity::ORM::ActiveRecord::Activity'
        - if comment.children.size > 2
          .comment-view-all-answers
            = t('view_all_answers')
        %ul.list-unstyled.media-block.child-comments
          = render :partial => 'comments/comment', :collection => comment.children.reverse, :as => :comment
        - if user_signed_in?
          .nested-comments
            .comment-reply
              = t('reply')
            .comment-answer
              = render :partial => 'comments/form', :locals => { :comment => Comment.build_from(comment.commentable, current_user.id, "", comment.id) }
        %hr