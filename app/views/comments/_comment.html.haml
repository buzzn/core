%li.mar-btm.comment{ :id => "comment_#{comment.id}" }


  - if user_signed_in? && current_user == comment.user
    .media-right
      %img.img-circle.img-sm{:alt => t("profile_picture"), :src => comment.user.profile.image.sm }
    .media-body.pad-hor.speech-right
      .speech
        %a.media-heading{:href => profile_path(comment.user.profile)}
          = comment.user.name

        %p= comment.body
        - if comment.deletable_by?(current_user)
          .remove_comment
            = link_to "×", comment_path(comment), :method => :delete, :remote => true, :confirm => "Are you sure you want to remove this comment?", :disable_with => "×", :class => 'close'
        .likes
          %p.speech-time
            %i.fa.fa-thumbs-o-up
            = comment.likes.nil? ? 0 : comment.likes
        %p.speech-time.time
          %i.fa.fa-clock-o.fa-fw
          = timeago_tag comment.updated_at, :nojs => true, :lang => locale, :limit => 10.days.ago
        = render comment.children
        -# .nested-comments.pull-left
        -#   =t('reply')



  - else
    .media-left
      %img.img-circle.img-sm{:alt => t("profile_picture"), :src => comment.user.profile.image.sm}
    .media-body.pad-hor.speech-left
      .speech
        %a.media-heading{:href => profile_path(comment.user.profile)}
          = comment.user.name
        %p= comment.body
        - if user_signed_in? && (current_user == comment.user || current_user.can_update?(@group))
          .remove_comment
            = link_to "×", comment_path(comment), :method => :delete, :remote => true, :confirm => "Are you sure you want to remove this comment?", :disable_with => "×", :class => 'close'
        .likes.pull-right
          %p.speech-time
            %i.increase-likes.fa.fa-thumbs-o-up
            .likes-count= comment.likes.nil? ? 0 : comment.likes
        %p.speech-time.time
          %i.fa.fa-clock-o.fa-fw
          = timeago_tag comment.updated_at, :nojs => true, :lang => locale, :limit => 10.days.ago
        -# .nested-comments.pull-left
        -#   =t('reply')