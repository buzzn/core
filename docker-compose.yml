version: '3.1'


volumes:
  postgresdb:
    driver: local
  redisdb:
    driver: local
  mongodb:
    driver: local
  core_staging_public:
    driver: local

services:

  core_test:
    build:
      context: .
      dockerfile: Dockerfile.test
    command: bash -c "bundle exec rake db:create db:structure:load && bundle exec rspec --tag ~slow:false spec/requests spec/models"
    depends_on:
      - postgres
      - redis
      - mongo
    env_file:
      - .env.docker
      - .env.test
    volumes:
      - ./spec:/core/spec
      - ./tmp:/core/tmp
      - ./db/seed_assets:/core/db/seed_assets
      - ./db/banks:/core/db/banks

  # core_staging_web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: bash -c "bundle exec rake db:create db:schema:load && bundle exec rake db:init"
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - core_staging_worker
  #     - postgres
  #     - redis
  #     - mongo
  #   env_file:
  #     - .env.docker
  #     - .env.staging
  #   volumes:
  #     - ./spec:/core/spec
  #     - ./tmp:/core/tmp
  #     - ./db/seed_assets:/core/db/seed_assets
  #     - ./db/banks:/core/db/banks
  #     - ./db/seeds.rb:/core/db/seeds.rb
  #     - core_staging_public:/core/public
  # core_staging_clockwork:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: bundle exec clockwork config/clock.rb
  #   depends_on:
  #     - core_staging_worker
  #     - postgres
  #     - redis
  #     - mongo
  #   env_file: .env.docker
  #
  # core_staging_worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: bash -c "bundle exec rake db:migrate && bundle exec sidekiq"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - mongo
  #   env_file: .env.docker


  postgres:
    image: postgres:9.4.12-alpine
    ports:
      - "5432"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    volumes:
      - postgresdb:/var/lib/postgresql/data

  redis:
    image: redis:3.2.9-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379"
    volumes:
      - redisdb:/data

  mongo:
    image: mongo:3.4.4
    ports:
      - "27017"
    volumes:
      - mongodb:/data
